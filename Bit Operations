import java.util.*;
public class Main
{
    public static int Bitnumber(int n)
    {
        int i,j,c=0,sum=0;
        for(i=n;i>0;i=i/2)
        {
            sum=sum+(i%2)*(int)Math.pow(10,c);
            c++;
        }
        return sum;
    }
    public static int getIthBit(int n,int i)
    {
        int bitMask=(1<<i);
        if((n&bitMask)==0)
        {
            return 0;
        }
        else
        {
            return 1;
        }
    }
    public static int setIthBit(int n,int i)//set ith bit to 1
    {
        int bitMask=(1<<i);
       return n|bitMask;
    }
     public static int clearIthBit(int n,int i)//set ith bit to 0
    {
        int bitMask=~(1<<i);
       return n&bitMask;
    }
    public static int clearBitsinRange(int n,int i,int j)
    {
        int a=((~0)<<(j+1));
        int b=((1<<i)-1);
        int bitMask=a|b;
        return n& bitMask;
    }
    public static boolean powerof2(int n)
    {
        if((n&(n-1))==0)
        {
            return true;
        }
        return false;
    }
    public static int countofset(int n)
    {
        int c=0;
        while(n>0)
        {
            if((n&1)==1)
            {
                c++;
            }
            n=n>>1;
        }
        return c;
    }
    public static int exponent(int n,int pow)
    {
        int ans=1;
        while(pow>0)
        {
            if((pow&1)!=0)//check LSB
            {
               ans=ans*n;
            }
            n=n*n;
            pow=pow>>1;
        }
        return ans;
    }
    public static void main(String[] args)
    {
        Scanner sc=new Scanner(System.in);
	    System.out.println("Enter number");
	    int n=sc.nextInt();
	    System.out.println("Enter starting index");
	    int i=sc.nextInt();
	    System.out.println("Enter ending index");
	    int j=sc.nextInt();
	    System.out.println("Enter ending index");
	    int pow=sc.nextInt();
	    int d=i;
	    System.out.println("Bit representation of "+n+" is "+Bitnumber(n));
	    if((d%10)==1)
	     System.out.println(i+"st Bit is "+ getIthBit(n,i));
	    else if(d==2)
	     System.out.println(i+"nd Bit is "+ getIthBit(n,i));
	     else if(d%10==3)
	     System.out.println(i+"rd Bit is "+ getIthBit(n,i));
	     else
	     System.out.println(i+"th Bit is "+ getIthBit(n,i));
	     System.out.println(n+" after seting ith bit is "+setIthBit(n,i));
	     System.out.println(n+" after clearing ith bit is "+clearIthBit(n,i));
	     System.out.println(n+" after clearing from ith to jth bit is "+clearBitsinRange(n,i,j));
	     if(powerof2(n))
	     {
	        System.out.println(n+" is a power of 2"); 
	     }
	     else
	     {
	          System.out.println(n+" is not power of 2"); 
	     }
	     System.out.println("Count of setbits is "+countofset(n));
	     System.out.println("Exponent of "+n+"^"+pow+" is "+exponent(n,pow));
	}
}
